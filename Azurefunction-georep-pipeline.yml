trigger:
  branches:
    include:
      - main  # or your working branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: ros-dlq-alert
  acrLoginServer: lexitasgeotest-gecubragfndnhvgk.azurecr.io
  functionAppName: lexitas-geo-test
  resourceGroupName: Internal-POC
  dockerfilePath: Dockerfile

stages:
  - stage: BuildPushDeploy
    jobs:
      - job: BuildPushDeploy
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: ''  # not used
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Logging in to Azure..."
                az login --service-principal \
                  --username ${{ secrets.AZURE_CLIENT_ID }} \
                  --password ${{ secrets.AZURE_CLIENT_SECRET }} \
                  --tenant ${{ secrets.AZURE_TENANT_ID }}

                echo "Logging in to ACR..."
                az acr login --name ${{ variables.acrLoginServer }}

                echo "Building Docker image..."
                docker build -t ${{ variables.acrLoginServer }}/${{ variables.imageName }}:latest .

                echo "Pushing Docker image to ACR..."
                docker push ${{ variables.acrLoginServer }}/${{ variables.imageName }}:latest

                echo "Deploying to Azure Function App..."
                az functionapp config container set \
                  --name ${{ variables.functionAppName }} \
                  --resource-group ${{ variables.resourceGroupName }} \
                  --docker-custom-image-name ${{ variables.acrLoginServer }}/${{ variables.imageName }}:latest

                echo "Restarting Function App..."
                az functionapp restart \
                  --name ${{ variables.functionAppName }} \
                  --resource-group ${{ variables.resourceGroupName }}
