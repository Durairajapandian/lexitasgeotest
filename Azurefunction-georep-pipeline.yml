trigger:
  branches:
    include:
      - main

pool:
  name: Default

variables:
  - group: AzureServicePrincipal

  - name: acrLoginServer
    value: lexitasgeotest-gecubragfndnhvgk.azurecr.io

  - name: functionAppName
    value: lexitas-geo-test

  - name: imageName
    value: ros-dlq-alert

  - name: resourceGroupName
    value: Internal-POC

stages:
  - stage: BuildPushDeploy
    jobs:
      - job: BuildPushDeploy
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'AzureRM-Geo'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Logging in to ACR..."
                az acr login --name "$(az acr list --query "[?loginServer=='${acrLoginServer}'].name" -o tsv)"

                echo "Building Docker image..."
                docker build -t "$acrLoginServer/$imageName:latest" .

                echo "Pushing Docker image to ACR..."
                docker push "$acrLoginServer/$imageName:latest"

                echo "Deploying to Azure Function App..."
                az functionapp config container set \
                  --name "$functionAppName" \
                  --resource-group "$resourceGroupName" \
                  --docker-custom-image-name "$acrLoginServer/$imageName:latest"

                echo "Restarting Function App..."
                az functionapp restart \
                  --name "$functionAppName" \
                  --resource-group "$resourceGroupName"
            env:
              acrLoginServer: $(acrLoginServer)
              imageName: $(imageName)
              functionAppName: $(functionAppName)
              resourceGroupName: $(resourceGroupName)
